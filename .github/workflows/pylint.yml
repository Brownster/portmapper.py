name: Pylint & Testing

on: [push]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint pytest PyYAML pandas pdfkit
        pip install -r requirements.txt
        
    - name: Create scripts directory and firewall_check.sh script for testing
      run: |
        mkdir -p scripts
        touch scripts/firewall_check.sh
        echo '#!/bin/bash' > scripts/firewall_check.sh
        echo '# Test firewall check script' >> scripts/firewall_check.sh
        echo 'echo "Firewall connectivity check tool"' >> scripts/firewall_check.sh
        chmod +x scripts/firewall_check.sh
        
    - name: Analyzing the code with pylint
      run: |
        pylint --disable=C0111,C0103,C0303,C0301,C0302,C0304,C0411,W1201,W1202,W1203,W1309,W1514,W0611,W0612,W0613,W0621,W0718,R0801,R0911,R0912,R0913,R0914,R0915,R0917,R1702,R1705 $(git ls-files '*.py')
        
    - name: Test with pytest and collect coverage
      run: |
        pip install pytest pytest-cov
        pytest tests/test_app.py tests/test_app_coverage.py -v --cov=app --cov-report=term
        
    - name: Verify coverage meets threshold
      run: |
        COVERAGE=$(pytest tests/test_app.py tests/test_app_coverage.py --cov=app --cov-report=term | grep app.py | awk '{print $4}' | tr -d '%')
        echo "Current coverage for app.py: $COVERAGE%"
        if (( $(echo "$COVERAGE < 70" | bc -l) )); then
          echo "Coverage threshold not met! (Required: 70%, Actual: $COVERAGE%)"
          exit 1
        else
          echo "Coverage threshold met! (Required: 70%, Actual: $COVERAGE%)"
        fi
